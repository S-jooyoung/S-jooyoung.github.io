{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/ALGORITHM","result":{"pageContext":{"currentCategory":"ALGORITHM","categories":["All","ALGORITHM","STUDY","RETROSPECT","PROJECT"],"edges":[{"node":{"id":"7b7beb1a-d701-5e52-8910-e667c5cfe6d0","excerpt":"막연하게 해시 알고리즘의 원리를 알지 못하고 코딩 테스트를 준비하면서 부족함을 느껴 여러 자료들을 모아 정리했습니다.🧑🏻‍💻 해시(Hash)함수란?🧐 란 데이터의 효율적 관리를 목적으로 임의의길이의 데이터를 고정된 길이의 데이터로 매핑하는 함수입니다. 이때 매핑 전 원래 데이터의 값을 , 매핑 후 데이터의 값을 , 매핑하는 과정 자체를 라고 한다.  해시(Hash) 테이블이란?🤔 해시 함수를 사용하여 키를 해시값으로 매핑하고, 이 해시값을 색인(index)혹은 주소 삼아 데이터의 값(value)을 키와 함께 저장하는 자료구조를 이라고 한다. 이때 저장되는 곳을  또는 이라고 한다.  해시(Hash) 테이블 예제💡 이해를 돕기 위해 예를 들어 보겠다. 스타벅스의 메뉴를 에 저장한다고 생각하면 이런 식으로 나올 것이다. 바닐라라떼가 먹고 싶어 가격을 알고 싶다면 Linear Search(선형검색)을 하여 하나하나 찾아봐야한다. 지금은 4개의 메뉴밖에 없어서 괜찮지만 메뉴가 100개 1000…","fields":{"slug":"/what-hash-study/"},"frontmatter":{"categories":"ALGORITHM","title":"(알고리즘) 해시(Hash) 알고리즘","date":"July 11, 2022"}},"next":{"fields":{"slug":"/what-sorting-study/"}},"previous":null},{"node":{"id":"9b7481be-1b9a-5df6-881d-34410bb69c3f","excerpt":"기본적인 정렬 알고리즘의 원리를 파악하고 어떤 식으로 구현할 수 있는지 알아봅시다.🧑🏻‍💻 선택 정렬이란?🧐 이란 이름 그대로 현재 위치에 들어갈 값을 찾아 정렬하는 배열이다. 선택 정렬 기본로직 정렬되지 않은 인덱스의 맨 앞에서부터, 이를 포함한 그 이후의 배열 값 중 가장 작은 값을 찾아간다. 가장 작은 값을 찾으면, 그 값을 현재 인덱스와 값과 바꿔준다. 다음 인덱스에서 위 과정을 반복해 준다. 선택 정렬 알고리즘은 n-1개, n-2개… 1개 비교하므로 시간 복잡도는   선택정렬 JavaSscipt 코드 삽입 정렬이란?🧐 이란 현재 위치에서, 그 이하의 배열들을 비교하여 자신이 들어갈 위치를 찾아, 그 위치에 삽입하는 배열 알고리즘이다. 선택 정렬과 같은 시간 복잡도 을 가지고 있지만 현재 위치에서 왼쪽 배열만을 탐색하기 때문에 더 효율적인 정렬이라고 할 수 있습니다. 삽입 정렬 기본로직 삽입 정렬은 두 번째 인덱스부터 시작한다. 현재 인덱스는 별도의 변수에 저장해 주고, 비교 인…","fields":{"slug":"/what-sorting-study/"},"frontmatter":{"categories":"ALGORITHM","title":"(알고리즘) 정렬 알고리즘 - JavaScript","date":"July 10, 2022"}},"next":{"fields":{"slug":"/what-goodtestCode-study/"}},"previous":{"fields":{"slug":"/what-hash-study/"}}},{"node":{"id":"eec40f2a-2e58-585d-9ffe-70ad8194a5b8","excerpt":"이번에는 2021 Dev-matching: 웹 백엔드 개발자(상반기)에 낸 문제의 풀이를 포스팅해 보도록 하겠습니다. 간단하게 for 문과 stack을 사용하여 해결하였는데 더 좋은 풀이가 있으시다면 밑에 댓글로 알려주시면 감사하겠습니다. 🥰 🤔 문제 설명 rows x columns 크기인 행렬이 있습니다. 행렬에는 1부터 rows x columns까지의 숫자가 한 줄씩 순서대로 적혀있습니다. 이 행렬에서 직사각형 모양의 범위를 여러 번 선택해, 테두리 부분에 있는 숫자들을 시계방향으로 회전시키려 합니다. 각 회전은 (x1, y1, x2, y2)인 정수 4개로 표현하며, 그 의미는 다음과 같습니다. x1 행 y1 열부터 x2 행 y2 열까지의 영역에 해당하는 직사각형에서 테두리에 있는 숫자들을 한 칸씩 시계방향으로 회전합니다. 😲 참고 자세한 사항은 프로그래머스 공식사이트에서 확인할 수 있다.\n프로그래머스-행렬 테두리 회전하기 💡 코드 📝 풀이 이 문제는 해당하는 영역을 특정하고 …","fields":{"slug":"/matrix-border-codingtest/"},"frontmatter":{"categories":"ALGORITHM","title":"(프로그래머스 Lv.2) 행렬 테두리 회전하기 - 자바스크립트","date":"June 25, 2022"}},"next":{"fields":{"slug":"/light-house-study/"}},"previous":{"fields":{"slug":"/what-testCode-study/"}}},{"node":{"id":"f1c6ac65-dc27-50d8-854e-002372676fd3","excerpt":"지금부터 코딩테스트를 연습하며 괜찮았던 문제들을 포스팅해 보려고 합니다. 한 번에 많은 시간을 할애하지는 못하지만, 꾸준히 공부하며 알고리즘 카테고리를 채워나가 보겠습니다. 🥰. 🤔 문제 설명 개발자를 희망하는 죠르디가 카카오에 면접을 보러 왔다.\n코로나 바이러스 감염 예방을 위해 응시자들은 거리뤄 둬서 대기를 해야하는데 개발 직군 면접인 만큼 아래와 같은 규칙으로 대기실에 거리를 두고 앉도록 안내하고 있다. 대기실은 5개이며, 각 대기실은 5x5 크기입니다. 거리두기를 위하여 응시자들 끼리는 맨해튼 거리가 2 이하로 앉지 말아 주세요. 단 응시자가 앉아있는 자리 사이가 파티션으로 막혀 있을 경우에는 허용합니다. 😲 참고 자세한 사항은 프로그래머스 공식사이트에서 확인할 수 있다.\n프로그래머스-거리두기 확인 💡 코드 📝 풀이 이 문제는 거리 2 이내에 다른 사람이 있는 정점이 있는지를 검사하면 되는 문제이다. 그렇다면 DFS, BFS로 풀 수 있을 거 같다. 이번에는 BFS로 풀어 …","fields":{"slug":"/keep-distance-codingtest/"},"frontmatter":{"categories":"ALGORITHM","title":"(프로그래머스 Lv.2) 거리두기 확인하기 - 자바스크립트","date":"June 20, 2022"}},"next":{"fields":{"slug":"/onecommit-retrospect/"}},"previous":{"fields":{"slug":"/light-house-study/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}