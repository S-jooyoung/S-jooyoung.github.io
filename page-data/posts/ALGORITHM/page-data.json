{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/ALGORITHM","result":{"pageContext":{"currentCategory":"ALGORITHM","categories":["All","ALGORITHM","STUDY","RETROSPECT","PROJECT"],"edges":[{"node":{"id":"eec40f2a-2e58-585d-9ffe-70ad8194a5b8","excerpt":"이번에는 2021 Dev-matching: 웹 백엔드 개발자(상반기)에 낸 문제의 풀이를 포스팅해 보도록 하겠습니다. 간단하게 for 문과 stack을 사용하여 해결하였는데 더 좋은 풀이가 있으시다면 밑에 댓글로 알려주시면 감사하겠습니다. 🥰 🤔 문제 설명 rows x columns 크기인 행렬이 있습니다. 행렬에는 1부터 rows x columns까지의 숫자가 한 줄씩 순서대로 적혀있습니다. 이 행렬에서 직사각형 모양의 범위를 여러 번 선택해, 테두리 부분에 있는 숫자들을 시계방향으로 회전시키려 합니다. 각 회전은 (x1, y1, x2, y2)인 정수 4개로 표현하며, 그 의미는 다음과 같습니다. x1 행 y1 열부터 x2 행 y2 열까지의 영역에 해당하는 직사각형에서 테두리에 있는 숫자들을 한 칸씩 시계방향으로 회전합니다. 😲 참고 자세한 사항은 프로그래머스 공식사이트에서 확인할 수 있다.\n프로그래머스-행렬 테두리 회전하기 💡 코드 📝 풀이 이 문제는 해당하는 영역을 특정하고 …","fields":{"slug":"/matrix-border-codingtest/"},"frontmatter":{"categories":"ALGORITHM","title":"(프로그래머스 Lv.2) 행렬 테두리 회전하기 - 자바스크립트","date":"June 25, 2022"}},"next":{"fields":{"slug":"/light-house-study/"}},"previous":null},{"node":{"id":"f1c6ac65-dc27-50d8-854e-002372676fd3","excerpt":"지금부터 코딩테스트를 연습하며 괜찮았던 문제들을 포스팅해 보려고 합니다. 한 번에 많은 시간을 할애하지는 못하지만, 꾸준히 공부하며 알고리즘 카테고리를 채워나가 보겠습니다. 🥰. 🤔 문제 설명 개발자를 희망하는 죠르디가 카카오에 면접을 보러 왔다.\n코로나 바이러스 감염 예방을 위해 응시자들은 거리뤄 둬서 대기를 해야하는데 개발 직군 면접인 만큼 아래와 같은 규칙으로 대기실에 거리를 두고 앉도록 안내하고 있다. 대기실은 5개이며, 각 대기실은 5x5 크기입니다. 거리두기를 위하여 응시자들 끼리는 맨해튼 거리가 2 이하로 앉지 말아 주세요. 단 응시자가 앉아있는 자리 사이가 파티션으로 막혀 있을 경우에는 허용합니다. 😲 참고 자세한 사항은 프로그래머스 공식사이트에서 확인할 수 있다.\n프로그래머스-거리두기 확인 💡 코드 📝 풀이 이 문제는 거리 2 이내에 다른 사람이 있는 정점이 있는지를 검사하면 되는 문제이다. 그렇다면 DFS, BFS로 풀 수 있을 거 같다. 이번에는 BFS로 풀어 …","fields":{"slug":"/keep-distance-codingtest/"},"frontmatter":{"categories":"ALGORITHM","title":"(프로그래머스 Lv.2) 거리두기 확인하기 - 자바스크립트","date":"June 20, 2022"}},"next":{"fields":{"slug":"/onecommit-retrospect/"}},"previous":{"fields":{"slug":"/light-house-study/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}