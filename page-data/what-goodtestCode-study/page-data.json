{"componentChunkName":"component---src-templates-blog-template-js","path":"/what-goodtestCode-study/","result":{"data":{"cur":{"id":"5dd0c38c-a3c8-5d38-8f16-4b51980281e6","html":"<blockquote>\n<p>저번 포스팅에 <a href=\"https://s-jooyoung.github.io/what-testCode-study/\">테스트 코드란 무엇인가?</a> 을 포스팅하였습니다. 그렇다면 이런 질문이 나올 수 있는데요. “테스트 코드는 뭔지 알겠는데 어떻게 하면 잘 작성할 수 있어?” 이 질문에 답이 될 수 있는 좋은 테스트 코드란 무엇인지에 대하여 포스팅해 보도록 하겠습니다.</p>\n</blockquote>\n<img src=\"https://bunny.jjalbot.com/2016/10/HkZmHwTLR/20150910_55f10fab22ac9.gif\" width=\"100%\">\n<h2 id=\"서론-️\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%A1%A0-%EF%B8%8F\" aria-label=\"서론 ️ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서론 🕵🏻‍♂️</h2>\n<p>사실 개발을 하는 모든 사람이라면 테스트 코드가 중요하다는 말은 많이 들어 봤을 거다. 그런데 정작 <code class=\"language-text\">좋은 테스트 코드</code>가 어떤것인지 어떻게 작성해야하는지는 모른다.(물론 나도 그랬다…😢) 그래서 이제부터라도 좋은 테스트 코드는 어떤것인지 같이 한번 알아보도록 하자.</p>\n<h2 id=\"좋은-테스트-코드란\" style=\"position:relative;\"><a href=\"#%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%9E%80\" aria-label=\"좋은 테스트 코드란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좋은 테스트 코드란?🧐</h2>\n<ul>\n<li>테스트 코드의 가독성과 유지 보수성이 좋아야 한다.</li>\n<li>프로젝트 안에서, 그리고 소스 파일 안에서 코드는 적절히 구조화 되어 있어야 한다.</li>\n<li>테스트가 무엇을 검사하는지 확실히 명시해야 한다.</li>\n<li>테스트는 안정적이고 반복 가능해야 한다.</li>\n</ul>\n<h2 id=\"좋은-테스트의-구조-\" style=\"position:relative;\"><a href=\"#%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EA%B5%AC%EC%A1%B0-\" aria-label=\"좋은 테스트의 구조  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좋은 테스트의 구조 🏠</h2>\n<h3 id=\"aaa패턴\" style=\"position:relative;\"><a href=\"#aaa%ED%8C%A8%ED%84%B4\" aria-label=\"aaa패턴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AAA패턴</h3>\n<ul>\n<li><strong>A</strong>range(준비): 테스트를 실행하기 전에 필요한 것들을 준비한다. 예를 들어 객체를 생성하거나, Mock 객체를 만드는 것을 의미한다.</li>\n<li><strong>A</strong>ct(실행): 테스트 코드를 실행한다.</li>\n<li><strong>A</strong>ssert(단언): 실행한 코드가 예상한 대로 동작했는지 확인한다.</li>\n</ul>\n<p>이렇게 <code class=\"language-text\">AAA패턴</code>은 단어 앞의 A를 붙인 것을 의미한다. 다른 개발자분들이 내가 작성한 테스트 코드를 볼 때 명확하게 이 AAA패턴을 알 수 있게 작성한다면 더 빨리 이해 할 수 있을것이다.</p>\n<blockquote>\n<p>AAA패턴(Arange,Act,Assert)을 GWT(Given,When,Then)으로 부르기도 합니다.</p>\n</blockquote>\n<h2 id=\"좋은-테스트의-원칙-first-\" style=\"position:relative;\"><a href=\"#%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%9B%90%EC%B9%99-first-\" aria-label=\"좋은 테스트의 원칙 first  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좋은 테스트의 원칙 FIRST 🥇</h2>\n<p><code class=\"language-text\">FIRST</code>란 <code class=\"language-text\">F</code>ast, <code class=\"language-text\">I</code>solated, <code class=\"language-text\">R</code>epeatable, <code class=\"language-text\">S</code>elf-validating, <code class=\"language-text\">T</code>imely 의 문자를 따서 지어진 이름이다.</p>\n<h3 id=\"fast--빠르다\" style=\"position:relative;\"><a href=\"#fast--%EB%B9%A0%EB%A5%B4%EB%8B%A4\" aria-label=\"fast  빠르다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fast , 빠르다</h3>\n<p>테스트 코드가 빠르게 수행될 수 있도록 만드는것! 느린 것에 대한 의존성을 낮춰야 한다<code class=\"language-text\">ex)network</code>. 테스트 코드가 빠르게 수행되어야지 많은 테스트가 있더라도 빈번히 테스트를 수행해서 검증할 수 있기 때문이다.</p>\n<h3 id=\"isolated-고립시키다\" style=\"position:relative;\"><a href=\"#isolated-%EA%B3%A0%EB%A6%BD%EC%8B%9C%ED%82%A4%EB%8B%A4\" aria-label=\"isolated 고립시키다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Isolated, 고립시키다</h3>\n<p>테스트 코드를 최소한의 유닛으로 테스트할 수 있도록 만들어야 한다. 하나의 테스트에서 너무 많은 것들을 테스트 해버린다면 어디에서 문제가 생겼는지 알기 힘들다. 최소한의 단위로 고립적으로, 독립적으로 만드는 것이 중요하다.</p>\n<h3 id=\"repleatable-반복-가능해야-한다\" style=\"position:relative;\"><a href=\"#repleatable-%EB%B0%98%EB%B3%B5-%EA%B0%80%EB%8A%A5%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"repleatable 반복 가능해야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repleatable, 반복 가능해야 한다</h3>\n<p>테스트 코드를 반복이 가능하도록 만들어야 한다. 실행할 때마다 동일한 결과를 유지해야 한다는 말이다. 너무 당연한 말이다. 네트워크나 직접 통제할 수 없는 외부 환경에 의존하는 코드라면 실행할 때마다 결과값이 달라질 수도 있을것이다.❌</p>\n<h3 id=\"self-validating-스스로-검증-가능해야한다\" style=\"position:relative;\"><a href=\"#self-validating-%EC%8A%A4%EC%8A%A4%EB%A1%9C-%EA%B2%80%EC%A6%9D-%EA%B0%80%EB%8A%A5%ED%95%B4%EC%95%BC%ED%95%9C%EB%8B%A4\" aria-label=\"self validating 스스로 검증 가능해야한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Self-validating, 스스로 검증 가능해야한다.</h3>\n<p>테스트 코드의 결과를 일일이 봐야 한다면 너무 번거롭다. Jest나 다른 라이브러리를 통해 내가 실행한 값과 원하는 결과값이 같은지 스스로 검증할 수 있도록 만들어야 한다.</p>\n<h3 id=\"timely-적시에-사용한다\" style=\"position:relative;\"><a href=\"#timely-%EC%A0%81%EC%8B%9C%EC%97%90-%EC%82%AC%EC%9A%A9%ED%95%9C%EB%8B%A4\" aria-label=\"timely 적시에 사용한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Timely, 적시에 사용한다.</h3>\n<blockquote>\n<p>사실 공부하면서 제가 했던 가장 큰 오류중 하나이기도 합니다 😂</p>\n</blockquote>\n<p>코드를 작성하고 수정한 다음 사용자에게 배포한 다음에 테스트 코드를 작성한다면 사실 아무런 의미가 없다. 사용자에게 배포하기 전!!에 적시에 테스트 코드를 작성해야 한다.</p>\n<h2 id=\"좋은-테스트의-범위-right-bicep\" style=\"position:relative;\"><a href=\"#%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EB%B2%94%EC%9C%84-right-bicep\" aria-label=\"좋은 테스트의 범위 right bicep permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좋은 테스트의 범위 Right-BICEP💡</h2>\n<p><code class=\"language-text\">Right-BICEP</code>이란 테스트 코드에서 무엇을 테스트할지에 대해 쉽게 선별하게 해준다.</p>\n<h3 id=\"right-결과가-올바른가\" style=\"position:relative;\"><a href=\"#right-%EA%B2%B0%EA%B3%BC%EA%B0%80-%EC%98%AC%EB%B0%94%EB%A5%B8%EA%B0%80\" aria-label=\"right 결과가 올바른가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Right, 결과가 올바른가?</h3>\n<p>테스트 코드는 무엇보다도 먼저 기대한 결과가 제대로 나오는지 검증할 수 있어야 한다. 모든 요구 사항이 정상 동작하는지 확인해야 한다.</p>\n<h3 id=\"boundary-conditions-경계-조건은-맞는가\" style=\"position:relative;\"><a href=\"#boundary-conditions-%EA%B2%BD%EA%B3%84-%EC%A1%B0%EA%B1%B4%EC%9D%80-%EB%A7%9E%EB%8A%94%EA%B0%80\" aria-label=\"boundary conditions 경계 조건은 맞는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Boundary conditions, 경계 조건은 맞는가?</h3>\n<p>테스트 코드는 모든 코너 케이스에 대해 테스트를 해야 한다. 예를 들어 값이 0이거나 이상적인 기댓값을 벗어나는 값이 들어올 때, 잘못된 양식의 데이터가 들어왔을 때의 케이스를 테스트해야 한다.</p>\n<h3 id=\"inverse-relationship-역-관계를-검사할-수-있는가\" style=\"position:relative;\"><a href=\"#inverse-relationship-%EC%97%AD-%EA%B4%80%EA%B3%84%EB%A5%BC-%EA%B2%80%EC%82%AC%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80\" aria-label=\"inverse relationship 역 관계를 검사할 수 있는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inverse relationship, 역 관계를 검사할 수 있는가?</h3>\n<p>말 그대로 역관계를 적용해서 결과값을 확인할 수 있어야 한다. 곱셈으로 나눗셈을 검증하고 뺄셈으로 덧셈을 검증하는 것 을 의미한다.</p>\n<h3 id=\"cross-check-다른-수단을-활용하여-교차-검사할-수-있는가\" style=\"position:relative;\"><a href=\"#cross-check-%EB%8B%A4%EB%A5%B8-%EC%88%98%EB%8B%A8%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B5%90%EC%B0%A8-%EA%B2%80%EC%82%AC%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80\" aria-label=\"cross check 다른 수단을 활용하여 교차 검사할 수 있는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cross-check, 다른 수단을 활용하여 교차 검사할 수 있는가?</h3>\n<p>기존에 작성했던 테스트 코드가 같은 역할을 하는 라이브러리나 다른 테스트 코드를 사용해도 똑같은 결과값이 나오는지 확인해야 함을 의미한다.</p>\n<h3 id=\"error-conditions-오류-조건을-잘-처리했는가\" style=\"position:relative;\"><a href=\"#error-conditions-%EC%98%A4%EB%A5%98-%EC%A1%B0%EA%B1%B4%EC%9D%84-%EC%9E%98-%EC%B2%98%EB%A6%AC%ED%96%88%EB%8A%94%EA%B0%80\" aria-label=\"error conditions 오류 조건을 잘 처리했는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error conditions, 오류 조건을 잘 처리했는가?</h3>\n<p>네트워크 에러가 발생했을 때 메모리가 가득 찼을 때 우리가 예상하는 오류 상황에서 우리의 코드가 오류를 잘 처리하는지 확인해야 한다.</p>\n<h3 id=\"performance-characteristics성능-조건은-기준에-부합하는가\" style=\"position:relative;\"><a href=\"#performance-characteristics%EC%84%B1%EB%8A%A5-%EC%A1%B0%EA%B1%B4%EC%9D%80-%EA%B8%B0%EC%A4%80%EC%97%90-%EB%B6%80%ED%95%A9%ED%95%98%EB%8A%94%EA%B0%80\" aria-label=\"performance characteristics성능 조건은 기준에 부합하는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Performance characteristics,성능 조건은 기준에 부합하는가?</h3>\n<p>성능 확인은 테스트를 통해 정확한 수치로 확인해야 한다. 성능이 좋다 하던지 기준에 부합한다는 것은 데이터를 통해 정확히 확인해야 한다.</p>\n<h2 id=\"경계-조건에서는-correct-\" style=\"position:relative;\"><a href=\"#%EA%B2%BD%EA%B3%84-%EC%A1%B0%EA%B1%B4%EC%97%90%EC%84%9C%EB%8A%94-correct-\" aria-label=\"경계 조건에서는 correct  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>경계 조건에서는 CORRECT 🧭</h2>\n<blockquote>\n<p>Right-BICEP의 Boundary conditions에서 <code class=\"language-text\">CORRECT</code>약어가 잠재적인 경계 조건을 기억하는 데 도움을 줄 수 있습니다.👍🏻</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>C</strong>onformance(준수) : 특정한 포맷을 준수하는지 확인해야 한다. 전화번호, 이메일 등 특정한 포맷을 따라야 한다면 인풋이 포맷에 맞을 때 아닐 때 우리의 코드가 어떻게 동작하는지 예상하는 테스트 코드를 작성해야 한다.</p>\n</li>\n<li>\n<p><strong>O</strong>rdering(순서) : 우리의 코드에서 값의 집합이 적절하게 정렬되어서 들어와야 하는 경우라면 정렬되어 있지 않을 때 순서가 잘못되었을 때 우리의 코드가 어떻게 동작하는지 예상하는 테스트 코드를 작성해야 한다.</p>\n</li>\n<li>\n<p><strong>R</strong>ange(범위) : 인풋의 범위가 우리가 예상하는 범위를 넘어섰을 때 어떻게 동작하는지도 테스트 코드를 작성해야 한다.</p>\n</li>\n<li>\n<p><strong>R</strong>eference(참조) : 우리가 가정하고 있는 상황이 아닐 때 어떻게 동작하는지도 테스트 코드를 작성해야한다.</p>\n</li>\n<li>\n<p><strong>E</strong>xistence(존재) : 값이 존재하지 않을 때 어떻게 동작하는지 확인하고 테스트 코드를 작성해야 한다.</p>\n</li>\n<li>\n<p><strong>C</strong>ardinality(기수) : 목록이 하나도 없을 때, 하나만 있을 때, 여러 개가 있을 때 등의 경우에 어떻게 동작하는지 확인하고 테스트 코드를 작성해야 한다.</p>\n</li>\n<li>\n<p><strong>T</strong>ime(시간): 특정한 시간을 너무 많이 소비했을 때 와 나라마다 시간이 다른 특정한 경우 어떻게 동작하는지 확인하고 테스트 코드를 작성해야 한다.</p>\n</li>\n</ul>\n<br/>\n<p><strong>궁금하신 점이 있다면 아래 <code class=\"language-text\">댓글</code>로 남겨주세요!👇</strong></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%84%9C%EB%A1%A0-%EF%B8%8F\">서론 🕵🏻‍♂️</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%9E%80\">좋은 테스트 코드란?🧐</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EA%B5%AC%EC%A1%B0-\">좋은 테스트의 구조 🏠</a></p>\n<ul>\n<li><a href=\"#aaa%ED%8C%A8%ED%84%B4\">AAA패턴</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%9B%90%EC%B9%99-first-\">좋은 테스트의 원칙 FIRST 🥇</a></p>\n<ul>\n<li><a href=\"#fast--%EB%B9%A0%EB%A5%B4%EB%8B%A4\">Fast , 빠르다</a></li>\n<li><a href=\"#isolated-%EA%B3%A0%EB%A6%BD%EC%8B%9C%ED%82%A4%EB%8B%A4\">Isolated, 고립시키다</a></li>\n<li><a href=\"#repleatable-%EB%B0%98%EB%B3%B5-%EA%B0%80%EB%8A%A5%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\">Repleatable, 반복 가능해야 한다</a></li>\n<li><a href=\"#self-validating-%EC%8A%A4%EC%8A%A4%EB%A1%9C-%EA%B2%80%EC%A6%9D-%EA%B0%80%EB%8A%A5%ED%95%B4%EC%95%BC%ED%95%9C%EB%8B%A4\">Self-validating, 스스로 검증 가능해야한다.</a></li>\n<li><a href=\"#timely-%EC%A0%81%EC%8B%9C%EC%97%90-%EC%82%AC%EC%9A%A9%ED%95%9C%EB%8B%A4\">Timely, 적시에 사용한다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A2%8B%EC%9D%80-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EB%B2%94%EC%9C%84-right-bicep\">좋은 테스트의 범위 Right-BICEP💡</a></p>\n<ul>\n<li><a href=\"#right-%EA%B2%B0%EA%B3%BC%EA%B0%80-%EC%98%AC%EB%B0%94%EB%A5%B8%EA%B0%80\">Right, 결과가 올바른가?</a></li>\n<li><a href=\"#boundary-conditions-%EA%B2%BD%EA%B3%84-%EC%A1%B0%EA%B1%B4%EC%9D%80-%EB%A7%9E%EB%8A%94%EA%B0%80\">Boundary conditions, 경계 조건은 맞는가?</a></li>\n<li><a href=\"#inverse-relationship-%EC%97%AD-%EA%B4%80%EA%B3%84%EB%A5%BC-%EA%B2%80%EC%82%AC%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80\">Inverse relationship, 역 관계를 검사할 수 있는가?</a></li>\n<li><a href=\"#cross-check-%EB%8B%A4%EB%A5%B8-%EC%88%98%EB%8B%A8%EC%9D%84-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B5%90%EC%B0%A8-%EA%B2%80%EC%82%AC%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94%EA%B0%80\">Cross-check, 다른 수단을 활용하여 교차 검사할 수 있는가?</a></li>\n<li><a href=\"#error-conditions-%EC%98%A4%EB%A5%98-%EC%A1%B0%EA%B1%B4%EC%9D%84-%EC%9E%98-%EC%B2%98%EB%A6%AC%ED%96%88%EB%8A%94%EA%B0%80\">Error conditions, 오류 조건을 잘 처리했는가?</a></li>\n<li><a href=\"#performance-characteristics%EC%84%B1%EB%8A%A5-%EC%A1%B0%EA%B1%B4%EC%9D%80-%EA%B8%B0%EC%A4%80%EC%97%90-%EB%B6%80%ED%95%A9%ED%95%98%EB%8A%94%EA%B0%80\">Performance characteristics,성능 조건은 기준에 부합하는가?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B2%BD%EA%B3%84-%EC%A1%B0%EA%B1%B4%EC%97%90%EC%84%9C%EB%8A%94-correct-\">경계 조건에서는 CORRECT 🧭</a></p>\n</li>\n</ul>\n</div>","excerpt":"저번 포스팅에 테스트 코드란 무엇인가? 을 포스팅하였습니다. 그렇다면 이런 질문이 나올 수 있는데요. “테스트 코드는 뭔지 알겠는데 어떻게 하면 잘 작성할 수 있어?” 이 질문에 답이 될 수 있는 좋은 테스트 코드란 무엇인지에 대하여 포스팅해 보도록 하겠습니다. 서론 🕵🏻‍♂️ 사실 개발을 하는 모든 사람이라면 테스트 코드가 중요하다는 말은 많이 들어 봤을 거다. 그런데 정작 가 어떤것인지 어떻게 작성해야하는지는 모른다.(물론 나도 그랬다…😢) 그래서 이제부터라도 좋은 테스트 코드는 어떤것인지 같이 한번 알아보도록 하자. 좋은 테스트 코드란?🧐 테스트 코드의 가독성과 유지 보수성이 좋아야 한다. 프로젝트 안에서, 그리고 소스 파일 안에서 코드는 적절히 구조화 되어 있어야 한다. 테스트가 무엇을 검사하는지 확실히 명시해야 한다. 테스트는 안정적이고 반복 가능해야 한다. 좋은 테스트의 구조 🏠 AAA패턴 Arange(준비): 테스트를 실행하기 전에 필요한 것들을 준비한다. 예를 들어 객체를 …","frontmatter":{"date":"July 06, 2022","title":"좋은 테스트 코드란 무엇인가?","categories":"STUDY","author":"키맨","emoji":"🛠"},"fields":{"slug":"/what-goodtestCode-study/"}},"next":{"id":"eec40f2a-2e58-585d-9ffe-70ad8194a5b8","html":"<blockquote>\n<p>이번에는 2021 Dev-matching: 웹 백엔드 개발자(상반기)에 낸 문제의 풀이를 포스팅해 보도록 하겠습니다. 간단하게 for 문과 stack을 사용하여 해결하였는데 더 좋은 풀이가 있으시다면 밑에 댓글로 알려주시면 감사하겠습니다. 🥰</p>\n</blockquote>\n<img src=\"https://blog.kakaocdn.net/dn/tTyNR/btri4448gmJ/WDioiw2PNFmZjqjaLU58Vk/img.png\">\n<h2 id=\"-문제-설명\" style=\"position:relative;\"><a href=\"#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\" 문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 문제 설명</h2>\n<p>rows x columns 크기인 행렬이 있습니다. 행렬에는 1부터 rows x columns까지의 숫자가 한 줄씩 순서대로 적혀있습니다. 이 행렬에서 직사각형 모양의 범위를 여러 번 선택해, 테두리 부분에 있는 숫자들을 시계방향으로 회전시키려 합니다. 각 회전은 (x1, y1, x2, y2)인 정수 4개로 표현하며, 그 의미는 다음과 같습니다.</p>\n<blockquote>\n<p>x1 행 y1 열부터 x2 행 y2 열까지의 영역에 해당하는 직사각형에서 테두리에 있는 숫자들을 한 칸씩 시계방향으로 회전합니다.</p>\n</blockquote>\n<h2 id=\"-참고\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0\" aria-label=\" 참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>😲 참고</h2>\n<p>자세한 사항은 프로그래머스 공식사이트에서 확인할 수 있다.\n<a href=\"https://programmers.co.kr/learn/courses/30/lessons/77485?language=javascript\">프로그래머스-행렬 테두리 회전하기</a></p>\n<h2 id=\"-코드\" style=\"position:relative;\"><a href=\"#-%EC%BD%94%EB%93%9C\" aria-label=\" 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💡 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">rows<span class=\"token punctuation\">,</span> columns<span class=\"token punctuation\">,</span> queries</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> rows <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span>columns <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 값 채우기</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> rows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> columns<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> columns <span class=\"token operator\">+</span> j<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 스택에 선택된 값 넣기</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> tc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> tc <span class=\"token operator\">&lt;</span> queries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> tc<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> queries<span class=\"token punctuation\">[</span>tc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 위 직사각형 담기</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> y1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> y2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 오른 직사각형 담기</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> x1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> x2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 아래 직사각형 담기</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> y2<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> y1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>x2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 왼쪽 직사각형 담기</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> x2<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> x1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 정닶값 찾기</span>\n    answer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 시계방향으로 한 칸 움직이기</span>\n    <span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    stack<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 위 직사각형 담기</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> y1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> y2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 오른 직사각형 담기</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> x1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> x2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 아래 직사각형 담기</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> y2<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> y1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>x2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 왼쪽 직사각형 담기</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> x2<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> x1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"-풀이\" style=\"position:relative;\"><a href=\"#-%ED%92%80%EC%9D%B4\" aria-label=\" 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 풀이</h2>\n<p>이 문제는 해당하는 영역을 특정하고 그 값에서 가장 작은 값을 찾으면 되는 문제이다. Stack을 활용하여 값을 특정하고 shift를 하여 시계방향으로 회전하는 식으로 구현하겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> rows <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span>columns <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 값 채우기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> rows<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> columns<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> columns <span class=\"token operator\">+</span> j<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>숫자 1부터 <code class=\"language-text\">columns * rows</code> 크기만큼 행렬을 만든다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 위 직사각형 담기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> y1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> y2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 오른 직사각형 담기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> x1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> x2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 아래 직사각형 담기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> y2<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> y1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>x2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 왼쪽 직사각형 담기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> x2<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> x1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 정닶값 찾기</span>\nanswer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>[x1, y1, x2, y2] 를 이용하여 target값을 stack에 넣어주고 해당 값에서 최소값을 구한다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 시계방향으로 한 칸 움직이기</span>\n<span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstack<span class=\"token punctuation\">.</span><span class=\"token function\">unshift</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 위 직사각형 담기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> y1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> y2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>x1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 오른 직사각형 담기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> x1<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> x2<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y2<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 아래 직사각형 담기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> y2<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> y1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>x2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 왼쪽 직사각형 담기</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> x2<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> x1<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"3\">\n<li><code class=\"language-text\">queries</code>가 한번 끝나면 시계방향으로 회전하기 위하여 stack에 담긴 값에 맨 뒤를 빼주고 맨 앞에 값을 넣어준다.</li>\n<li>스택에 값을 다시 행렬에 넣어준다.</li>\n</ol>\n<br/>\n<p><strong>궁금하신 점이 있다면 아래 <code class=\"language-text\">댓글</code>로 남겨주세요!👇</strong></p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#-%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">🤔 문제 설명</a></li>\n<li><a href=\"#-%EC%B0%B8%EA%B3%A0\">😲 참고</a></li>\n<li><a href=\"#-%EC%BD%94%EB%93%9C\">💡 코드</a></li>\n<li><a href=\"#-%ED%92%80%EC%9D%B4\">📝 풀이</a></li>\n</ul>\n</div>","frontmatter":{"date":"June 25, 2022","title":"(프로그래머스 Lv.2) 행렬 테두리 회전하기 - 자바스크립트","categories":"ALGORITHM","author":"키맨","emoji":"📝"},"fields":{"slug":"/matrix-border-codingtest/"}},"prev":{"id":"fe5100ff-f503-5b4e-86aa-a020a8f26b58","html":"<blockquote>\n<p>개발자라면 꼭 알아야 하는 테스트 코드!! 라는 말을 많이 들어보셨을 텐데요. 저 또한 이야기는 많이 들었지만, 정확히 왜 작성해야 하고 각 각의 의미가 어떤 것인지 상기시키기 위하여 포스팅해 보도록 하겠습니다.</p>\n</blockquote>\n<img src=\"https://bunny.jjalbot.com/2019/01/cl-H9wkxrn/RLRlP6kQU.png\">\n<h2 id=\"테스트-코드란\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%9E%80\" aria-label=\"테스트 코드란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 코드란?🧐</h2>\n<p>소프트웨어의 제품 or 서비스의 품질을 확인하거나 소프트웨어의 버그를 찾을 때 작성하는 코드를 의미한다. 다시 말해, 제품이 예상하는 대로 동작 하는지 확인하는 것!</p>\n<h2 id=\"테스트-코드를-왜-작성해야할까-\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%99%9C-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C-\" aria-label=\"테스트 코드를 왜 작성해야할까  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 코드를 왜 작성해야할까? 🤔</h2>\n<ol>\n<li><strong>기능이 정상적으로 동작하는지 확인할 수 있다.</strong></li>\n</ol>\n<ul>\n<li>보통 코드를 작성하고 일일이 실행해 보며 기능을 확인하지만 테스트 코드를 작성한다면 보다 편하게 기능이 정상적으로 동작하는지 확인 가능하다.</li>\n</ul>\n<ol start=\"2\">\n<li><strong>결함을 사전에 발견할 수 있다.</strong></li>\n</ol>\n<ul>\n<li>여러 가지 기능에 대한 테스트 코드를 작성해놓았다면 기존 코드를 잘 못 작성했을 때 오류가 생기므로 결함을 사전에 발견할 수 있습니다.</li>\n</ul>\n<ol start=\"3\">\n<li><strong>Refactoring에 대한 자신감</strong></li>\n</ol>\n<ul>\n<li>기존의 코드를 다른 코드로 리팩토링 할 때 기존의 소스와 동일한 동작을 하는지에 대한 걱정을 하지 않아도 된다. 수정을 하고 테스트 코드를 실행했을 때 오류가 나지 않는다면 잘 수정한 거겠죠?👍🏻</li>\n</ul>\n<ol start=\"4\">\n<li><strong>문서로서 작용할 수 있다.</strong></li>\n</ol>\n<ul>\n<li>코드 작성자의 의도, 사용법, 주의사항 등이 드러나게 되어 있어 문서화의 효과도 누릴 수 있습니다.</li>\n</ul>\n<blockquote>\n<p>개인적으로 3번과 4번의 이유를 절실히 체감하는거 같습니다.🥰</p>\n</blockquote>\n<h2 id=\"테스트-피라미드-\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%94%BC%EB%9D%BC%EB%AF%B8%EB%93%9C-\" aria-label=\"테스트 피라미드  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 피라미드 ⛰</h2>\n<p><img src=\"https://images.velog.io/images/jooyoung/post/4c136f7d-6fc4-425b-9a3c-4dbe40cfe719/%E1%84%83%E1%85%A1%E1%84%8B%E1%85%AE%E1%86%AB%E1%84%85%E1%85%A9%E1%84%83%E1%85%B3.png\" alt=\"\">\n<code class=\"language-text\">위에 설명한 것처럼</code> 테스트 코드를 작성하면 좋은 점이 너무나도 많다.👍🏻 테스트들 중에서도 어떤 플랫폼이냐에따라 다양한 테스트들이 있지만 모든 개발자분들이 프로젝트를 진행할 때 공통적으로 작성해야 하는 테스트들이 있다. 이걸 모아놓은것이 <code class=\"language-text\">테스트 피라미드</code>이다.</p>\n<p><code class=\"language-text\">테스트 피라미드</code>는 보는 바와 같이 유닛테스트, 통합테스트, UI테스트(E2E 테스트)3가지의 테스트로 나누어 진다.</p>\n<h3 id=\"1-unit-test\" style=\"position:relative;\"><a href=\"#1-unit-test\" aria-label=\"1 unit test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Unit Test</h3>\n<p><img src=\"https://images.velog.io/images/jooyoung/post/ec81c3ed-5c32-4fd3-9dff-e28f1d723223/%E1%84%83%E1%85%A1%E1%84%8B%E1%85%AE%E1%86%AB%E1%84%85%E1%85%A9%E1%84%83%E1%85%B3%20(1).png\" alt=\"\">\nUnit Test 다른 말로 <code class=\"language-text\">단위 테스트</code>라고도 부른다. 말 그대로 함수나 모듈 클래스와 같은 단위 딱 하나를 테스트하는 걸 의미한다. 예를 들어, 자전거에서 바퀴 하나를 테스트한다면 <code class=\"language-text\">단위 테스트</code>이다.</p>\n<h3 id=\"2-integration-test\" style=\"position:relative;\"><a href=\"#2-integration-test\" aria-label=\"2 integration test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Integration Test</h3>\n<p><img src=\"https://images.velog.io/images/jooyoung/post/8d20728c-d308-41ee-b326-4155d51ad1bf/%E1%84%83%E1%85%A1%E1%84%8B%E1%85%AE%E1%86%AB%E1%84%85%E1%85%A9%E1%84%83%E1%85%B3%20(2).png\" alt=\"\">\n그다음은 <code class=\"language-text\">통합 테스트</code>이다. 하나의 단위가 아니라 여러 가지 단위를 통합했을 때 서로 상호작용을 잘하는지 테스트하는 걸 의미한다. 예를 들어, 자전거에서 바퀴와 체인을 연결하여 체인을 돌렸을 때 바퀴가 잘 돌아가는지와 같은 서로의 상호작용을 확인하는 것이 <code class=\"language-text\">통합 테스트</code> 이다.</p>\n<h3 id=\"3-user-interface-teste2e-test\" style=\"position:relative;\"><a href=\"#3-user-interface-teste2e-test\" aria-label=\"3 user interface teste2e test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. User interface Test(E2E Test)</h3>\n<p><img src=\"https://images.velog.io/images/jooyoung/post/cf16c7f2-fdd6-4d89-bd43-f96e35d10c15/%E1%84%83%E1%85%A1%E1%84%8B%E1%85%AE%E1%86%AB%E1%84%85%E1%85%A9%E1%84%83%E1%85%B3.png\" alt=\"\">\n<code class=\"language-text\">E2E 테스트</code> End-to-End의 줄임말로 끝과 끝의 테스트라고 부른다. 실제로 사용자가 앱을 사용했을 때 그 Flow를 테스트하는 것을 의미한다. 다시 말해 바퀴나 체인 부분적인 상호작용이 아니라 자전거 핸들을 잡고 페달을 밟아가며 전체적으로 테스트하는 것을 의미한다. 🚲</p>\n<h2 id=\"️-마무리\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"️ 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🕵🏻‍♂️ 마무리</h2>\n<p>다음 테스트 관련 포스팅으로는 JS 테스트 프레임워크 인 Jest에 대하여 설명하는 글을 올려보도록 하겠습니다. 긴 글 읽어주셔서 감사합니다.✌️</p>\n<br/>\n<p><strong>궁금하신 점이 있다면 아래 <code class=\"language-text\">댓글</code>로 남겨주세요!👇</strong></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%9E%80\">테스트 코드란?🧐</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%99%9C-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C-\">테스트 코드를 왜 작성해야할까? 🤔</a></p>\n</li>\n<li>\n<p><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%94%BC%EB%9D%BC%EB%AF%B8%EB%93%9C-\">테스트 피라미드 ⛰</a></p>\n<ul>\n<li><a href=\"#1-unit-test\">1. Unit Test</a></li>\n<li><a href=\"#2-integration-test\">2. Integration Test</a></li>\n<li><a href=\"#3-user-interface-teste2e-test\">3. User interface Test(E2E Test)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EF%B8%8F-%EB%A7%88%EB%AC%B4%EB%A6%AC\">🕵🏻‍♂️ 마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 06, 2022","title":"테스트 코드란 무엇인가?","categories":"STUDY","author":"키맨","emoji":"🛠"},"fields":{"slug":"/what-testCode-study/"}},"site":{"siteMetadata":{"siteUrl":"https://s-jooyoung.github.io","comments":{"utterances":{"repo":"S-jooyoung/S-jooyoung.github.io"}}}}},"pageContext":{"slug":"/what-goodtestCode-study/","nextSlug":"/matrix-border-codingtest/","prevSlug":"/what-testCode-study/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}